<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/DELL/Desktop/chinook_db/chinook.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="5283"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,5:mainAlbum"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Album" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="84"/><column index="2" value="300"/><column index="3" value="76"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Artist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="76"/><column index="2" value="300"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Customer" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="111"/><column index="2" value="97"/><column index="3" value="105"/><column index="4" value="300"/><column index="5" value="300"/><column index="6" value="167"/><column index="7" value="55"/><column index="8" value="124"/><column index="9" value="106"/><column index="10" value="165"/><column index="11" value="157"/><column index="12" value="233"/><column index="13" value="131"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Employee" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="112"/><column index="2" value="95"/><column index="3" value="97"/><column index="4" value="157"/><column index="5" value="98"/><column index="6" value="162"/><column index="7" value="162"/><column index="8" value="228"/><column index="9" value="85"/><column index="10" value="55"/><column index="11" value="78"/><column index="12" value="106"/><column index="13" value="148"/><column index="14" value="148"/><column index="15" value="214"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Genre" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="80"/><column index="2" value="144"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Invoice" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort><column index="9" mode="1"/></sort><column_widths><column index="1" value="93"/><column index="2" value="111"/><column index="3" value="162"/><column index="4" value="300"/><column index="5" value="167"/><column index="6" value="109"/><column index="7" value="132"/><column index="8" value="160"/><column index="9" value="53"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="InvoiceLine" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="129"/><column index="2" value="93"/><column index="3" value="75"/><column index="4" value="88"/><column index="5" value="84"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="MediaType" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="121"/><column index="2" value="212"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Playlist" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="199"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="PlaylistTrack" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="91"/><column index="2" value="75"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Track" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="75"/><column index="2" value="300"/><column index="3" value="84"/><column index="4" value="121"/><column index="5" value="80"/><column index="6" value="300"/><column index="7" value="115"/><column index="8" value="79"/><column index="9" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Top-Spending Customers by Genre">SELECT 	Customer_Name, 
		Purchase_Amount, 
		Genre
FROM
		(SELECT 	Customer.FirstName || ' ' || Customer.LastName AS Customer_Name, 
				Invoice.CustomerId, 
				Genre.Name AS Genre, 
				sum(InvoiceLine.UnitPrice) AS Purchase_Amount,
				dense_rank() OVER (PARTITION BY Genre.Name ORDER BY sum(InvoiceLine.UnitPrice)DESC) AS RANK

		FROM 	Customer
		JOIN 	Invoice
		ON 		Customer.CustomerId = Invoice.CustomerId
		JOIN 	InvoiceLine
		ON		Invoice.InvoiceId = InvoiceLine.InvoiceId
		JOIN	Track
		ON		InvoiceLine.TrackId = Track.TrackId
		JOIN 	Genre
		ON 		Genre.GenreId = Track.GenreId

		GROUP BY 1,2,3
		ORDER BY 3)  AS first_sub
		
WHERE RANK IN (1,2,3) AND GENRE = 'Sci Fi &amp; Fantasy'

ORDER BY RANK </sql><sql name="Employee Sales Performance">WITH Sales_rep_sub

AS
	(
			SELECT 	Employee.EmployeeId, 
					Employee.FirstName || ' ' || Employee.LastName AS Sales_Agent, 
					Invoice.CustomerId, 
					sum(Invoice.Total) AS Total_Purchase

			FROM 	Invoice
			JOIN	Customer
			ON 		Customer.CustomerId = Invoice.InvoiceId
			JOIN	Employee
			ON 		Customer.SupportRepId = Employee.EmployeeId

			GROUP BY 1,2,3
			ORDER BY 1
	)

SELECT  Sales_Agent, 
		avg( Total_Purchase) Avg_invoice_amount,
		dense_rank() OVER (ORDER BY avg( Total_Purchase)DESC) AS Sales_Performance_Rank

FROM Sales_rep_sub

GROUP BY 1</sql><sql name="Country with the Newest Customers">WITH sub

AS

(SELECT
    Invoice.CustomerId
   ,Invoice.BillingCountry AS Country
   ,STRFTIME('%Y', Invoice.InvoiceDate) AS Date_of_Purchase
   ,SUM(Invoice.Total) AS total_amount

  FROM Invoice
  JOIN InvoiceLine
    ON Invoice.InvoiceId = InvoiceLine.InvoiceId
  JOIN Track
    ON InvoiceLine.TrackId = Track.TrackId
  JOIN Genre
    ON Track.GenreId = Genre.GenreId

  GROUP BY 1
          ,2
          ,3)

SELECT
  COUNT(sub.CustomerId) AS Count_of_New_Customers
 ,sub.Country
 ,SUM(sub.total_amount) AS Amount_Spent

FROM sub

WHERE Date_of_Purchase = '2013'
AND Date_of_Purchase NOT IN ('2009', '2010', '2011', '2012')

GROUP BY 2
ORDER BY 1 DESC</sql><sql name=" Analyzing Top Selling Artists">WITH firstsub
AS
(SELECT
    InvoiceLine.TrackId AS Track_Id
   ,Artist.ArtistId AS Artist_Id

  FROM InvoiceLine
  JOIN Track
    ON InvoiceLine.TrackId = Track.TrackId
  JOIN Album
    ON Track.AlbumId = Album.AlbumId
  JOIN Artist
    ON Album.ArtistId = Artist.ArtistId),
secondsub
AS
(SELECT
    Artist.ArtistId
   ,COUNT(firstsub.Artist_Id) AS No_of_Artist_Sales

  FROM Artist
  LEFT JOIN firstsub
    ON Artist.ArtistId = firstsub.Artist_Id

  GROUP BY 1)

SELECT
  Artist.ArtistId
 ,Artist.Name
 ,secondsub.No_of_Artist_Sales
 ,NTILE(2) OVER (ORDER BY secondsub.No_of_Artist_Sales DESC) AS No_of_Sales_Bucket
 ,CASE
    WHEN NTILE(2) OVER (ORDER BY secondsub.No_of_Artist_Sales DESC) = 1 AND
      secondsub.No_of_Artist_Sales &gt; (SELECT
          AVG(No_of_Artist_Sales) AS Avg_Artist_Sales
        FROM secondsub) THEN 'Top_Selling ARTIST'

    WHEN NTILE(2) OVER (ORDER BY secondsub.No_of_Artist_Sales DESC) = 1 AND
      secondsub.No_of_Artist_Sales &lt;= (SELECT
          AVG(No_of_Artist_Sales) AS Avg_Artist_Sales
        FROM secondsub) THEN 'Low_Selling ARTIST'

    WHEN NTILE(2) OVER (ORDER BY secondsub.No_of_Artist_Sales DESC) = 2 AND
      secondsub.No_of_Artist_Sales &gt;= (SELECT
          AVG(No_of_Artist_Sales) AS Avg_Artist_Sales
        FROM secondsub) THEN 'Top_Selling ARTIST'

    WHEN NTILE(2) OVER (ORDER BY secondsub.No_of_Artist_Sales DESC) = 2 AND
      secondsub.No_of_Artist_Sales &lt;= (SELECT
          AVG(No_of_Artist_Sales) AS Avg_Artist_Sales
        FROM secondsub) THEN 'Low_Selling Artist'

  END AS Artist_Sales

FROM Artist
JOIN secondsub
  ON Artist.ArtistId = secondsub.ArtistId

</sql><current_tab id="3"/></tab_sql></sqlb_project>
